import tensorflow as tf
import os
import cv2

def gen_tfrecord(zero_dir,one_dir,output_tfrecord_file):
    '''
    读取文件夹中的图片数据， 生成tfrecord格式的文件

    Args:
      zero_dir: 保存图片0的文件夹
      one_dir: 保存图片1的文件夹
      output_tfrecord_file: 输出的tfrecord文件

    Return:

    '''
    tf_writer = tf.python_io.TFRecordWriter(output_tfrecord_file)

    for file in os.listdir(zero_dir):
        file_path = os.path.join(zero_dir,file)
        image_data = cv2.imread(file_path)
        image_bytes = image_data.tostring()
        rows = image_data.shape[0]
        cols = image_data.shape[1]
        channels = image_data.shape[2]
        label_data = 0

        example = tf.train.Example()

        feature = example.features.feature
        feature['height'].int64_list.value.append(rows)
        feature['width'].int64_list.value.append(cols)
        feature['channels'].int64_list.value.append(channels)
        feature['image_data'].bytes_list.value.append(image_bytes)
        feature['label'].int64_list.value.append(label_data)

        tf_writer.write(example.SerializeToString())

    for file in os.listdir(one_dir):
        file_path = os.path.join(one_dir,file)
        image_data = cv2.imread(file_path)
        image_bytes = image_data.tostring()
        rows = image_data.shape[0]
        cols = image_data.shape[1]
        channels = image_data.shape[2]
        label_data = 1
        feature = example.features.feature
        feature['height'].int64_list.value.append(rows)
        feature['width'].int64_list.value.append(cols)
        feature['channels'].int64_list.value.append(channels)
        feature['image_data'].bytes_list.value.append(image_bytes)
        feature['label'].int64_list.value.append(label_data)

        tf_writer.write(example.SerializeToString())

    tf_writer.close()

